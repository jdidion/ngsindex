from typing import Generator
from ngsindex import *
import pytest
from . import IndexTestData, ChunkTestData, ChunkTestDataSet, sparse_list


TEST_BAI_INDEX_DATA = [
    IndexTestData(
        name="Valid index",
        data=[
            0x42,
            0x41,
            0x49,
            0x01,
            0x01,
            0x00,
            0x00,
            0x00,
            0x02,
            0x00,
            0x00,
            0x00,
            0x49,
            0x12,
            0x00,
            0x00,
            0x01,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x62,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x91,
            0x01,
            0x00,
            0x00,
            0x00,
            0x00,
            0x4a,
            0x92,
            0x00,
            0x00,
            0x02,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x62,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x91,
            0x01,
            0x00,
            0x00,
            0x00,
            0x00,
            0x08,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x01,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x01,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x62,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x01,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
        ],
        expect=BaiIndex(
            version=1,
            num_ref=1,
            ref_indexes=[
                BaiRefIndex(
                    reference_id=0,
                    unmapped_begin=(98, 0),
                    unmapped_end=(98, 0),
                    num_mapped=8,
                    num_unmapped=1,
                    bins=[
                        Bin(
                            bin_num=4681,
                            chunks=[
                                Chunk(
                                    begin=Offset(file_offset=98, block_offset=0),
                                    end=Offset(file_offset=401, block_offset=0),
                                )
                            ],
                        )
                    ],
                    offsets=[Offset(file_offset=98, block_offset=0)],
                )
            ],
            num_unmapped=1,
        ),
    ),
    IndexTestData(
        name="Index without num_unmapped",
        data=[
            0x42,
            0x41,
            0x49,
            0x01,
            0x01,
            0x00,
            0x00,
            0x00,
            0x02,
            0x00,
            0x00,
            0x00,
            0x49,
            0x12,
            0x00,
            0x00,
            0x01,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x62,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x91,
            0x01,
            0x00,
            0x00,
            0x00,
            0x00,
            0x4a,
            0x92,
            0x00,
            0x00,
            0x02,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x62,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x91,
            0x01,
            0x00,
            0x00,
            0x00,
            0x00,
            0x08,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x01,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x01,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x62,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
        ],
        expect=BaiIndex(
            version=1,
            num_ref=1,
            ref_indexes=[
                BaiRefIndex(
                    reference_id=0,
                    unmapped_begin=(98, 0),
                    unmapped_end=(98, 0),
                    num_mapped=8,
                    num_unmapped=1,
                    bins=[
                        Bin(
                            bin_num=4681,
                            chunks=[
                                Chunk(
                                    begin=Offset(file_offset=98, block_offset=0),
                                    end=Offset(file_offset=401, block_offset=0),
                                )
                            ],
                        )
                    ],
                    offsets=[Offset(file_offset=98, block_offset=0)],
                )
            ],
            num_unmapped=None,
        ),
    ),
    IndexTestData(
        name="Index without stats chunk",
        data=[
            0x42,
            0x41,
            0x49,
            0x01,
            0x01,
            0x00,
            0x00,
            0x00,
            0x01,
            0x00,
            0x00,
            0x00,
            0x49,
            0x12,
            0x00,
            0x00,
            0x01,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x62,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x91,
            0x01,
            0x00,
            0x00,
            0x00,
            0x00,
            0x01,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x62,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x01,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
        ],
        expect=BaiIndex(
            version=1,
            num_ref=1,
            ref_indexes=[
                BaiRefIndex(
                    reference_id=0,
                    bins=[
                        Bin(
                            bin_num=4681,
                            chunks=[
                                Chunk(
                                    begin=Offset(file_offset=98, block_offset=0),
                                    end=Offset(file_offset=401, block_offset=0),
                                )
                            ],
                        )
                    ],
                    offsets=[Offset(file_offset=98, block_offset=0)],
                )
            ],
            num_unmapped=1,
        ),
    ),
    IndexTestData(
        name="Index without stats or num_unmapped",
        data=[
            0x42,
            0x41,
            0x49,
            0x01,
            0x01,
            0x00,
            0x00,
            0x00,
            0x01,
            0x00,
            0x00,
            0x00,
            0x49,
            0x12,
            0x00,
            0x00,
            0x01,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x62,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x91,
            0x01,
            0x00,
            0x00,
            0x00,
            0x00,
            0x01,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x62,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
        ],
        expect=BaiIndex(
            version=1,
            num_ref=1,
            ref_indexes=[
                BaiRefIndex(
                    reference_id=0,
                    bins=[
                        Bin(
                            bin_num=4681,
                            chunks=[
                                Chunk(
                                    begin=Offset(file_offset=98, block_offset=0),
                                    end=Offset(file_offset=401, block_offset=0),
                                )
                            ],
                        )
                    ],
                    offsets=[Offset(file_offset=98, block_offset=0)],
                )
            ],
            num_unmapped=None,
        ),
    ),
    IndexTestData(
        name="Index with multiple reference_list, all sequences unmapped",
        data=[
            0x42,
            0x41,
            0x49,
            0x01,
            0x56,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x02,
            0x00,
            0x00,
            0x00,
            0x4a,
            0x92,
            0x00,
            0x00,
            0x02,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x46,
            0x12,
            0x00,
            0x00,
            0x00,
            0x00,
            0xf9,
            0x1c,
            0x46,
            0x12,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x1d,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x70,
            0x20,
            0x00,
            0x00,
            0x01,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x46,
            0x12,
            0x00,
            0x00,
            0x00,
            0x00,
            0xf9,
            0x1c,
            0x46,
            0x12,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x02,
            0x00,
            0x00,
            0x00,
            0x4a,
            0x92,
            0x00,
            0x00,
            0x02,
            0x00,
            0x00,
            0x00,
            0xf9,
            0x1c,
            0x46,
            0x12,
            0x00,
            0x00,
            0x00,
            0x00,
            0x1d,
            0x40,
            0x46,
            0x12,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x25,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x4a,
            0x12,
            0x00,
            0x00,
            0x01,
            0x00,
            0x00,
            0x00,
            0xf9,
            0x1c,
            0x46,
            0x12,
            0x00,
            0x00,
            0x00,
            0x00,
            0x1d,
            0x40,
            0x46,
            0x12,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x02,
            0x00,
            0x00,
            0x00,
            0x53,
            0x12,
            0x00,
            0x00,
            0x01,
            0x00,
            0x00,
            0x00,
            0x1d,
            0x40,
            0x46,
            0x12,
            0x00,
            0x00,
            0x00,
            0x00,
            0xf5,
            0x41,
            0x46,
            0x12,
            0x00,
            0x00,
            0x00,
            0x00,
            0x4a,
            0x92,
            0x00,
            0x00,
            0x02,
            0x00,
            0x00,
            0x00,
            0x1d,
            0x40,
            0x46,
            0x12,
            0x00,
            0x00,
            0x00,
            0x00,
            0xf5,
            0x41,
            0x46,
            0x12,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x02,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0xa4,
            0x03,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00
        ],
        expect=BaiIndex(
            version=1,
            num_ref=86,
            ref_indexes=sparse_list(
                86,
                BaiRefIndex.empty,
                (
                    23,
                    BaiRefIndex(
                        reference_id=23,
                        unmapped_begin=(0x1246, 0),
                        unmapped_end=(0x1246, 0x1cf9),
                        num_mapped=0,
                        num_unmapped=0x1d,
                        bins=[
                            Bin(
                                bin_num=0x2070,
                                chunks=[
                                    Chunk(
                                        begin=Offset(
                                            file_offset=0x1246, block_offset=0
                                        ),
                                        end=Offset(
                                            file_offset=0x1246, block_offset=0x1cf9
                                        ),
                                    )
                                ],
                            )
                        ],
                        offsets=[],
                    ),
                ),
                (
                    24,
                    BaiRefIndex(
                        reference_id=24,
                        unmapped_begin=(0x1246, 0x1cf9),
                        unmapped_end=(0x1246, 0x401d),
                        num_mapped=0,
                        num_unmapped=0x25,
                        bins=[
                            Bin(
                                bin_num=0x124a,
                                chunks=[
                                    Chunk(
                                        begin=Offset(
                                            file_offset=0x1246, block_offset=0x1cf9
                                        ),
                                        end=Offset(
                                            file_offset=0x1246, block_offset=0x401d
                                        ),
                                    )
                                ],
                            )
                        ],
                        offsets=[],
                    ),
                ),
                (
                    72,
                    BaiRefIndex(
                        reference_id=72,
                        unmapped_begin=(0x1246, 0x401d),
                        unmapped_end=(0x1246, 0x41f5),
                        num_mapped=0,
                        num_unmapped=0x2,
                        bins=[
                            Bin(
                                bin_num=0x1253,
                                chunks=[
                                    Chunk(
                                        begin=Offset(
                                            file_offset=0x1246, block_offset=0x401d
                                        ),
                                        end=Offset(
                                            file_offset=0x1246, block_offset=0x41f5
                                        ),
                                    )
                                ],
                            )
                        ],
                        offsets=[],
                    ),
                ),
            ),
            num_unmapped=932,
        ),
    ),
]


@pytest.fixture(params=TEST_BAI_INDEX_DATA)
def test_bai_index_data(request: IndexTestData) -> Generator[IndexTestData, None, None]:
    yield request.param


TEST_CSI_INDEX_DATA = [
    IndexTestData(
        name="Valid index",
        data=[
            0x43,
            0x53,
            0x49,
            0x01,
            0x0e,
            0x00,
            0x00,
            0x00,
            0x06,
            0x00,
            0x00,
            0x00,
            0x24,
            0x00,
            0x00,
            0x00,
            0x02,
            0x00,
            0x00,
            0x00,
            0x01,
            0x00,
            0x00,
            0x00,
            0x02,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x23,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x08,
            0x00,
            0x00,
            0x00,
            0x31,
            0x39,
            0x00,
            0x32,
            0x30,
            0x00,
            0x58,
            0x00,
            0x03,
            0x00,
            0x00,
            0x00,
            0x02,
            0x00,
            0x00,
            0x00,
            0x49,
            0x92,
            0x00,
            0x00,
            0x39,
            0x05,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x01,
            0x00,
            0x00,
            0x00,
            0x39,
            0x05,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0xa6,
            0x05,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x4a,
            0x92,
            0x04,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x02,
            0x00,
            0x00,
            0x00,
            0x39,
            0x05,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0xa6,
            0x05,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x02,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x05,
            0x00,
            0x00,
            0x00,
            0x49,
            0x92,
            0x00,
            0x00,
            0xa6,
            0x05,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x01,
            0x00,
            0x00,
            0x00,
            0xa6,
            0x05,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x4a,
            0x92,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x01,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x72,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x4a,
            0x92,
            0x04,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x02,
            0x00,
            0x00,
            0x00,
            0xa6,
            0x05,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0xd6,
            0x07,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x8c,
            0x92,
            0x00,
            0x00,
            0x72,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x01,
            0x00,
            0x00,
            0x00,
            0x72,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0xec,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x94,
            0x92,
            0x00,
            0x00,
            0xec,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x01,
            0x00,
            0x00,
            0x00,
            0xec,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0xd6,
            0x07,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x02,
            0x00,
            0x00,
            0x00,
            0x49,
            0x92,
            0x00,
            0x00,
            0xd6,
            0x07,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x01,
            0x00,
            0x00,
            0x00,
            0xd6,
            0x07,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x97,
            0x03,
            0x00,
            0x00,
            0x00,
            0x00,
            0x4a,
            0x92,
            0x04,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x02,
            0x00,
            0x00,
            0x00,
            0xd6,
            0x07,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x97,
            0x03,
            0x00,
            0x00,
            0x00,
            0x00,
            0x01,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00
        ],
        expect=CsiIndex(
            version=1,
            num_ref=3,
            min_shift=14,
            depth=6,
            aux=(
                2, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 35, 0, 0, 0, 0, 0, 0, 0,
                8, 0, 0, 0, 49, 57, 0, 50, 48, 0, 88, 0
            ),
            ref_indexes=[
                CsiRefIndex(
                    reference_id=0,
                    bins=[
                        CsiBin(
                            bin_num=37449,
                            first_record_offset=1337,
                            chunks=[
                                Chunk(
                                    begin=Offset(file_offset=0, block_offset=1337),
                                    end=Offset(file_offset=0, block_offset=1446),
                                )
                            ],
                        ),
                        CsiBin(
                            bin_num=299594,
                            first_record_offset=0,
                            chunks=[
                                Chunk(
                                    begin=Offset(file_offset=0, block_offset=1337),
                                    end=Offset(file_offset=0, block_offset=1446),
                                ),
                                Chunk(
                                    begin=Offset(file_offset=0, block_offset=2),
                                    end=Offset(file_offset=0, block_offset=0),
                                )
                            ]
                        )
                    ]
                ),
                CsiRefIndex(
                    reference_id=1,
                    bins=[
                        CsiBin(
                            bin_num=37449,
                            first_record_offset=1446,
                            chunks=[
                                Chunk(
                                    begin=Offset(file_offset=0, block_offset=1446),
                                    end=Offset(file_offset=0, block_offset=1556),
                                )
                            ],
                        ),
                        CsiBin(
                            bin_num=37450,
                            first_record_offset=1556,
                            chunks=[
                                Chunk(
                                    begin=Offset(file_offset=0, block_offset=1556),
                                    end=Offset(file_offset=0, block_offset=1650),
                                )
                            ],
                        ),
                        CsiBin(
                            bin_num=299594,
                            first_record_offset=0,
                            chunks=[
                                Chunk(
                                    begin=Offset(file_offset=0, block_offset=1446),
                                    end=Offset(file_offset=0, block_offset=2006),
                                ),
                                Chunk(
                                    begin=Offset(file_offset=0, block_offset=6),
                                    end=Offset(file_offset=0, block_offset=0),
                                )
                            ],
                        ),
                        CsiBin(
                            bin_num=37516,
                            first_record_offset=1650,
                            chunks=[
                                Chunk(
                                    begin=Offset(file_offset=0, block_offset=1650),
                                    end=Offset(file_offset=0, block_offset=1772),
                                )
                            ],
                        ),
                        CsiBin(
                            bin_num=37524,
                            first_record_offset=1772,
                            chunks=[
                                Chunk(
                                    begin=Offset(file_offset=0, block_offset=1772),
                                    end=Offset(file_offset=0, block_offset=2006),
                                )
                            ],
                        )
                    ]
                ),
                CsiRefIndex(
                    reference_id=2,
                    bins=[
                        CsiBin(
                            bin_num=37449,
                            first_record_offset=2006,
                            chunks=[
                                Chunk(
                                    begin=Offset(file_offset=0, block_offset=2006),
                                    end=Offset(file_offset=919, block_offset=0),
                                )
                            ],
                        ),
                        CsiBin(
                            bin_num=299594,
                            first_record_offset=0,
                            chunks=[
                                Chunk(
                                    begin=Offset(file_offset=0, block_offset=2006),
                                    end=Offset(file_offset=919, block_offset=0),
                                ),
                                Chunk(
                                    begin=Offset(file_offset=0, block_offset=1),
                                    end=Offset(file_offset=0, block_offset=0),
                                )
                            ]
                        )
                    ]
                ),
            ],
            num_unmapped=0,
        )
    )
]


@pytest.fixture(params=TEST_CSI_INDEX_DATA)
def test_csi_index_data(request: IndexTestData) -> Generator[IndexTestData, None, None]:
    yield request.param


TEST_TBI_INDEX_DATA = [
    IndexTestData(
        name="Valid TBI index",
        data=[
            0x54,
            0x42,
            0x49,
            0x01,
            0x03,
            0x00,
            0x00,
            0x00,
            0x02,
            0x00,
            0x00,
            0x00,
            0x01,
            0x00,
            0x00,
            0x00,
            0x02,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x23,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x08,
            0x00,
            0x00,
            0x00,
            0x31,
            0x39,
            0x00,
            0x32,
            0x30,
            0x00,
            0x58,
            0x00,
            0x02,
            0x00,
            0x00,
            0x00,
            0x49,
            0x12,
            0x00,
            0x00,
            0x01,
            0x00,
            0x00,
            0x00,
            0x39,
            0x05,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0xa6,
            0x05,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x4a,
            0x92,
            0x00,
            0x00,
            0x02,
            0x00,
            0x00,
            0x00,
            0x39,
            0x05,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0xa6,
            0x05,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x02,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x01,
            0x00,
            0x00,
            0x00,
            0x39,
            0x05,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x05,
            0x00,
            0x00,
            0x00,
            0x49,
            0x12,
            0x00,
            0x00,
            0x01,
            0x00,
            0x00,
            0x00,
            0xa6,
            0x05,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x4a,
            0x12,
            0x00,
            0x00,
            0x01,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x72,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x4a,
            0x92,
            0x00,
            0x00,
            0x02,
            0x00,
            0x00,
            0x00,
            0xa6,
            0x05,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0xd6,
            0x07,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x8c,
            0x12,
            0x00,
            0x00,
            0x01,
            0x00,
            0x00,
            0x00,
            0x72,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0xec,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x94,
            0x12,
            0x00,
            0x00,
            0x01,
            0x00,
            0x00,
            0x00,
            0xec,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0xd6,
            0x07,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x4c,
            0x00,
            0x00,
            0x00,
            0xa6,
            0x05,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x14,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x72,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x72,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x72,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x72,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x72,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x72,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x72,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x72,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0xec,
            0x06,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x02,
            0x00,
            0x00,
            0x00,
            0x49,
            0x12,
            0x00,
            0x00,
            0x01,
            0x00,
            0x00,
            0x00,
            0xd6,
            0x07,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x97,
            0x03,
            0x00,
            0x00,
            0x00,
            0x00,
            0x4a,
            0x92,
            0x00,
            0x00,
            0x02,
            0x00,
            0x00,
            0x00,
            0xd6,
            0x07,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x97,
            0x03,
            0x00,
            0x00,
            0x00,
            0x00,
            0x01,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x01,
            0x00,
            0x00,
            0x00,
            0xd6,
            0x07,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00
        ],
        expect=TbiIndex(
            version=1,
            num_ref=3,
            file_format=2,
            col_seq=1,
            col_begin=2,
            col_end=0,
            meta=35,
            skip=0,
            ref_names=('19', '20', 'X'),
            name_map = {
                '19': 0,
                '20': 1,
                'X': 2,
            },
            ref_indexes=[
                DualRefIndex(
                    reference_id=0,
                    bins=[
                        Bin(
                            bin_num=4681,
                            chunks=[
                                Chunk(
                                    begin=Offset(file_offset=0, block_offset=1337),
                                    end=Offset(file_offset=0, block_offset=1446),
                                )
                            ],
                        ),
                        Bin(
                            bin_num=37450,
                            chunks=[
                                Chunk(
                                    begin=Offset(file_offset=0, block_offset=1337),
                                    end=Offset(file_offset=0, block_offset=1446),
                                ),
                                Chunk(
                                    begin=Offset(file_offset=0, block_offset=2),
                                    end=Offset(file_offset=0, block_offset=0),
                                )
                            ]
                        )
                    ],
                    offsets=[Offset(file_offset=0, block_offset=1337)],
                ),
                DualRefIndex(
                    reference_id=1,
                    bins=[
                        Bin(
                            bin_num=4681,
                            chunks=[
                                Chunk(
                                    begin=Offset(file_offset=0, block_offset=1446),
                                    end=Offset(file_offset=0, block_offset=1556),
                                )
                            ],
                        ),
                        Bin(
                            bin_num=4682,
                            chunks=[
                                Chunk(
                                    begin=Offset(file_offset=0, block_offset=1556),
                                    end=Offset(file_offset=0, block_offset=1650),
                                )
                            ],
                        ),
                        Bin(
                            bin_num=37450,
                            chunks=[
                                Chunk(
                                    begin=Offset(file_offset=0, block_offset=1446),
                                    end=Offset(file_offset=0, block_offset=2006),
                                ),
                                Chunk(
                                    begin=Offset(file_offset=0, block_offset=6),
                                    end=Offset(file_offset=0, block_offset=0),
                                )
                            ],
                        ),
                        Bin(
                            bin_num=4748,
                            chunks=[
                                Chunk(
                                    begin=Offset(file_offset=0, block_offset=1650),
                                    end=Offset(file_offset=0, block_offset=1772),
                                )
                            ],
                        ),
                        Bin(
                            bin_num=4756,
                            chunks=[
                                Chunk(
                                    begin=Offset(file_offset=0, block_offset=1772),
                                    end=Offset(file_offset=0, block_offset=2006),
                                )
                            ],
                        )
                    ],
                    offsets=[
                        Offset(file_offset=0, block_offset=1446),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1556),
                        Offset(file_offset=0, block_offset=1650),
                        Offset(file_offset=0, block_offset=1650),
                        Offset(file_offset=0, block_offset=1650),
                        Offset(file_offset=0, block_offset=1650),
                        Offset(file_offset=0, block_offset=1650),
                        Offset(file_offset=0, block_offset=1650),
                        Offset(file_offset=0, block_offset=1650),
                        Offset(file_offset=0, block_offset=1650),
                        Offset(file_offset=0, block_offset=1772),
                    ],
                ),
                DualRefIndex(
                    reference_id=2,
                    bins=[
                        Bin(
                            bin_num=4681,
                            chunks=[
                                Chunk(
                                    begin=Offset(file_offset=0, block_offset=2006),
                                    end=Offset(file_offset=919, block_offset=0),
                                )
                            ],
                        ),
                        Bin(
                            bin_num=37450,
                            chunks=[
                                Chunk(
                                    begin=Offset(file_offset=0, block_offset=2006),
                                    end=Offset(file_offset=919, block_offset=0),
                                ),
                                Chunk(
                                    begin=Offset(file_offset=0, block_offset=1),
                                    end=Offset(file_offset=0, block_offset=0),
                                )
                            ],
                        )
                    ],
                    offsets=[Offset(file_offset=0, block_offset=2006)],
                ),
            ],
            num_unmapped=0,
        ),
    )
]


@pytest.fixture(params=TEST_TBI_INDEX_DATA)
def test_tbi_index_data(request: IndexTestData) -> Generator[IndexTestData, None, None]:
    yield request.param


# conceptualBAIdata is gzip compressed BAI for the alignments in the BAM
# corresponding to:
#
# @HD	VN:1.0	SO:coordinate
# @SQ	SN:conceptual	LN:134217728
# 60m66m:bin0	0	conceptual	62914561	40	6291456M	*	0	0	*	*
# 70m76m:bin2	0	conceptual	73400321	40	6291456M	*	0	0	*	*
# 73m75m:bin18	0	conceptual	76546049	40	2097152M	*	0	0	*	*
#
# This is a coordinate-translated version of the conceptual example in the
# SAM spec using binning as actually used by BAM rather than as presented.
TEST_CHUNK_DATA = [
    ChunkTestDataSet(
        name="Compressed conceptual BAM from SAM spec",
        data=[
            0x1f,
            0x8b,
            0x08,
            0x08,
            0xe3,
            0xf6,
            0x2c,
            0x54,
            0x00,
            0x03,
            0x63,
            0x6f,
            0x6e,
            0x63,
            0x65,
            0x70,
            0x74,
            0x75,
            0x61,
            0x6c,
            0x2e,
            0x62,
            0x61,
            0x6d,
            0x2e,
            0x62,
            0x61,
            0x69,
            0x00,
            0xed,
            0xcb,
            0x41,
            0x0d,
            0x85,
            0x30,
            0x10,
            0x40,
            0xc1,
            0x2d,
            0xa0,
            0x00,
            0x2d,
            0x18,
            0x80,
            0x1b,
            0xf8,
            0x20,
            0x41,
            0x0f,
            0x8a,
            0x10,
            0xf3,
            0x85,
            0xfc,
            0xa4,
            0xb4,
            0x07,
            0x08,
            0x0a,
            0x60,
            0xe6,
            0xb0,
            0x2f,
            0x6d,
            0xb7,
            0xd3,
            0x38,
            0xa7,
            0x14,
            0x11,
            0x5d,
            0x9c,
            0x52,
            0x9e,
            0x6b,
            0x9e,
            0x43,
            0x69,
            0x53,
            0xee,
            0xeb,
            0x79,
            0x2b,
            0x5d,
            0xf6,
            0xf3,
            0xad,
            0xee,
            0x47,
            0xfc,
            0xf2,
            0x6c,
            0xe3,
            0xaa,
            0x2f,
            0xff,
            0xb7,
            0xdb,
            0xde,
            0xd1,
            0x07,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0x00,
            0xf0,
            0x68,
            0x55,
            0x55,
            0x55,
            0x55,
            0x55,
            0x55,
            0x55,
            0x55,
            0x55,
            0xd5,
            0x97,
            0x76,
            0x50,
            0x55,
            0x55,
            0x55,
            0xd5,
            0x4f,
            0xb5,
            0xfa,
            0x03,
            0x6e,
            0x81,
            0xb2,
            0xab,
            0x88,
            0x96,
            0x00,
            0x00,
        ],
        tests=[
            ChunkTestData(
                65000,
                71000,
                [
                    Chunk(
                        begin=Offset(file_offset=101, block_offset=0),
                        end=Offset(file_offset=101, block_offset=52),
                    )
                ],
            ),
            ChunkTestData(
                77594624,
                80740352,
                [
                    Chunk(
                        begin=Offset(file_offset=101, block_offset=52),
                        end=Offset(file_offset=228, block_offset=0),
                    )
                ],
            ),
            ChunkTestData(
                62914561,
                68157440,
                [
                    Chunk(
                        begin=Offset(file_offset=101, block_offset=0),
                        end=Offset(file_offset=101, block_offset=104),
                    )
                ],
            ),
            ChunkTestData(
                72351744,
                80740352,
                [
                    Chunk(
                        begin=Offset(file_offset=101, block_offset=0),
                        end=Offset(file_offset=228, block_offset=0),
                    )
                ],
            ),
            ChunkTestData(
                61865984,
                80740352,
                [
                    Chunk(
                        begin=Offset(file_offset=101, block_offset=0),
                        end=Offset(file_offset=228, block_offset=0),
                    )
                ],
            ),
            ChunkTestData(80740352, 81788928, []),
        ],
        compressed=True,
    )
]


@pytest.fixture(params=TEST_CHUNK_DATA)
def test_chunk_data(
        request: ChunkTestDataSet) -> Generator[ChunkTestDataSet, None, None]:
    yield request.param
